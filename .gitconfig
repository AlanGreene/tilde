[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	ignorecase = true
	excludesfile = ~/.gitignore

[color]
	ui = auto

[user]
	name = Jan Moesen
	# My e-mail address can differ from repository to repository. The default
	# e-mail address is specified as GIT_AUTHOR_EMAIL and GIT_COMMITTER_EMAIL
	# in ~/.bash/extra.

[pretty]
	concise = %C(yellow)%h%C(reset) %s %C(bold black)(%an, %ar)%C(reset)%C(bold blue)%d%C(reset)

[alias]
	# When doing "git git log" or some such, do not complain about "git" not
	# being a valid Git command. This happens when copy-pasting examples, for
	# instance.
	git = !git

	# Quickly view the latest commits in a multicolour oneliner format that
	# highlights the parts I care about most: SHA, description and branch.
	l = log --pretty=concise -n 20

	# Like "git l", but show all and draw the history graph, too.
	ll = log --pretty=concise --graph

	# Show a concise status of the working directory, along with the branch
	# and the number of commits behind and/or ahead.
	s = status --short --branch

	# Quickly push to the most common destination.
	pom = push origin master

	# I know "pum" could just as well stand for "PUsh" instead of "PUll", but
	# I am so used to "git pom" that "git pum" feels like a natural
	# counterpart. I always try to rebase to prevent unnecessary merge
	# commits.
	pum = pull --rebase origin master
